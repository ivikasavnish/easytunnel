name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Build for all platforms
      run: |
        export VERSION=${{ steps.version.outputs.VERSION }}
        export BUILD_TIME=$(date -u '+%Y-%m-%d_%H:%M:%S')
        export COMMIT_HASH=${{ github.sha }}
        
        # Build all platforms
        make build-all

    - name: Package releases
      run: |
        export VERSION=${{ steps.version.outputs.VERSION }}
        make package

    - name: Create Debian package
      run: |
        export VERSION=${{ steps.version.outputs.VERSION }}
        make deb

    - name: Generate release notes
      id: release_notes
      run: |
        cat > release_notes.md << 'EOF'
        ## Easy SSH Tunnel Manager ${{ steps.version.outputs.VERSION }}
        
        ### 🚀 Installation
        
        **Quick Install (Unix/Linux/macOS):**
        ```bash
        curl -sSL https://raw.githubusercontent.com/${{ github.repository }}/main/install-universal.sh | bash
        ```
        
        **Windows:**
        Download `easytunnel-${{ steps.version.outputs.VERSION }}-windows-amd64.zip` and extract to your desired location.
        
        **Debian/Ubuntu:**
        ```bash
        wget https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/easytunnel-${{ steps.version.outputs.VERSION }}-amd64.deb
        sudo dpkg -i easytunnel-${{ steps.version.outputs.VERSION }}-amd64.deb
        ```
        
        ### 📦 Platform Downloads
        
        - **Linux AMD64**: `easytunnel-${{ steps.version.outputs.VERSION }}-linux-amd64.tar.gz`
        - **Linux ARM64**: `easytunnel-${{ steps.version.outputs.VERSION }}-linux-arm64.tar.gz`
        - **macOS AMD64**: `easytunnel-${{ steps.version.outputs.VERSION }}-darwin-amd64.tar.gz`
        - **macOS ARM64**: `easytunnel-${{ steps.version.outputs.VERSION }}-darwin-arm64.tar.gz`
        - **Windows AMD64**: `easytunnel-${{ steps.version.outputs.VERSION }}-windows-amd64.zip`
        - **Debian Package**: `easytunnel-${{ steps.version.outputs.VERSION }}-amd64.deb`
        
        ### 🔧 Usage
        
        1. Start the application: `easytunnel`
        2. Open your browser to `http://localhost:10000`
        3. Add your SSH tunnels through the web interface
        
        ### 📚 Documentation
        
        - [Quick Start Guide](https://github.com/${{ github.repository }}/blob/main/QUICKSTART.md)
        - [Full Documentation](https://github.com/${{ github.repository }}/blob/main/README.md)
        
        ### 🐛 Troubleshooting
        
        If you encounter SSH issues, use the included debugging tools:
        ```bash
        debug-ssh.sh "your-ssh-command"
        diagnose-tunnel.sh "your-ssh-command"
        ```
        
        ### ✅ Verification
        
        Verify the downloads with the provided checksums in `checksums.txt`.
        EOF

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.version.outputs.VERSION }}
        name: Easy SSH Tunnel Manager ${{ steps.version.outputs.VERSION }}
        bodyFile: release_notes.md
        artifacts: |
          dist/${{ steps.version.outputs.VERSION }}/*.tar.gz
          dist/${{ steps.version.outputs.VERSION }}/*.zip
          dist/${{ steps.version.outputs.VERSION }}/checksums.txt
          dist/*.deb
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}

  homebrew:
    name: Update Homebrew Formula
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Update Homebrew formula
      uses: dawidd6/action-homebrew-bump-formula@v3
      with:
        token: ${{ secrets.HOMEBREW_TOKEN }}
        formula: easytunnel
        # This would need a Homebrew tap repository
